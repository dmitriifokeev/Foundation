import { v4 as uuidv4 } from "uuid";
import htmlPro from "../../../assets/img/bgCourseCards/htmlPro.jpg";

const htmlProProgram = {
  programHeader: {
    title: "Верстка HTML/CSS (Pro)",
    tag: "Со знанием HTML / CSS",
    heroSubtitle:
      "Этот курс сделает вас настоящим 'PRO' верстальщиком веб сайтов! Освойте современные методы создания CSS анимаций, работу с GRID CSS и продвинутые методы адаптации сайтов. Бонус: работа с Git и NPM",
    type: "Курс",
    bgImg: htmlPro,
    difficulty: 2,
  },

  program: [
    {
      id: uuidv4(),
      title: "Подготовка / Повторение / Первые анимации",
      info: "12 лекций • 2ч 24м",
      lessons: [
        { lesson: "Hello world! Скачиваем материалы к курсу", time: "03:57" },
        {
          lesson: "Устанавливаем и настраиваем необходимое программное обеспечение",
          time: "16:46",
        },
        {
          lesson: "Новое свойство clip-path. Начинаем создавать первую секцию сайта",
          time: "27:35",
        },
        { lesson: "Если у вас не работает Scout-app", time: "06:37" },
        { lesson: "Практика: Создайте свою фигуру с помощью Clip-path", time: "00:47" },
        {
          lesson: "Как выравнивать элементы по вертикали с помощью абсолютного позиционирования",
          time: "25:28",
        },
        { lesson: "Знакомство с @KeyFrames. Создаем первую анимацию.", time: "10:08" },
        { lesson: "Backface-visibility и создание кнопок через псевдо-классы", time: "13:51" },
        { lesson: "Анимируем кнопку с помощью псевдо-элементов", time: "08:59" },
        { lesson: "Animation-fill-mode. Запуск анимации из определенной точки.", time: "07:03" },
        { lesson: "3 принципа веб разработки", time: "10:40" },
        { lesson: "Используйте REM вместо PX", time: "12:11" },
      ],
    },
    {
      id: uuidv4(),
      title: "Git и GitHub",
      info: "42 лекции • 4ч 7м",
      lessons: [
        { lesson: "О чем этот блок", time: "01:50" },
        { lesson: "Базовые команды в терминале", time: "12:53" },
        { lesson: "Как редактировать файлы через терминал", time: "04:59" },
        { lesson: "Устанавливаем систему git на наш компьютер", time: "03:35" },
        {
          lesson: "Как запустить git в определенном проекте. Настраиваем имя и email.",
          time: "08:54",
        },
        { lesson: "Создаем первый коммит", time: "06:17" },
        { lesson: "Отправка проекта GitHub", time: "13:57" },
        { lesson: "Если у вас ошибка при отправке вашего проекта на GitHub", time: "08:15" },
        {
          lesson: "Если у вас ошибка с логином при попытке отправить проект на GitHub",
          time: "08:05",
        },
        { lesson: "Практика: создайте собственный репозиторий", time: "01:15" },
        { lesson: "Как удалить репозиторий GitHub", time: "00:57" },
        { lesson: "Как скачивать репозитории из GitHub", time: "07:07" },
        { lesson: "Эмулируем работу 2-х разработчиков на одном репозитории", time: "08:30" },
        { lesson: "Как вывести информацию о коммитах в терминал. Git log", time: "04:33" },
        { lesson: "Что такое ветки", time: "04:14" },
        { lesson: "Как создавать ветки и перемещаться по ним", time: "09:29" },
        { lesson: "Закрываем пробел из начала мини курса с обозначениями -u и -М", time: "05:11" },
        {
          lesson: "Ошибка не сохраненного коммита при checkout. Как работает Git stash",
          time: "11:47",
        },
        { lesson: "Как перекинуть созданные изменения на новую ветку", time: "03:26" },
        { lesson: "Как перекинуть несколько коммитов на новую ветку", time: "06:00" },
        { lesson: "Что такое состояние открепленной головы. Detached HEAD", time: "04:52" },
        { lesson: "Как восстановить конкретный файл из прошлого коммита", time: "07:12" },
        {
          lesson: "Продвинутый git log и git show. Вывод подробной информации в консоль",
          time: "05:40",
        },
        { lesson: "Как объединять ветки с помощью Git merge. Способ Fast-forward", time: "04:54" },
        { lesson: "Как удалять ветки", time: "03:53" },
        {
          lesson: "Как удалить файлы рабочей директории которые находятся в состоянии untracked",
          time: "04:28",
        },
        { lesson: "Git reset --hard. Способ жесткого отката к коммиту", time: "03:23" },
        { lesson: "Второй способ найти подвисший коммит с помощью ORIG_HEAD", time: "02:22" },
        { lesson: "Git reset --soft", time: "04:10" },
        { lesson: "Git commit --amend изменение комментария прошлого коммита", time: "01:59" },
        { lesson: "Git reset --mixed", time: "02:45" },
        { lesson: "Разница git reset и git restore", time: "02:38" },
        {
          lesson: "Введение в git diff. Вывод разницы нескольких коммитов в консоль",
          time: "07:56",
        },
        { lesson: "Практический пример применения git diff", time: "06:00" },
        { lesson: "Как вывести схему веток в терминал. Git log --graph", time: "06:01" },
        {
          lesson: "Объединяем ветки с помощью git merge. Способ 'Истинное слияние'",
          time: "12:00",
        },
        { lesson: "Как откатиться назад после слияния", time: "03:06" },
        { lesson: "Как скопировать определенный коммит с помощью git cherry-pick", time: "06:41" },
        { lesson: "Слияние веток с помощью git rebase", time: "07:21" },
        { lesson: "Что лучше git rebase или git merge", time: "07:00" },
        { lesson: "Как использовать файл .gitignore", time: "07:42" },
        { lesson: "Заключительное слово", time: "03:17" },
      ],
    },
    {
      id: uuidv4(),
      title: "Продвинутая верстка - CSS/SASS",
      info: "27 лекций • 6ч 2м",
      lessons: [
        { lesson: "О чем этот блок", time: "02:11" },
        { lesson: "Как работают SASS переменные", time: "09:45" },
        { lesson: "Как работают миксины", time: "04:03" },
        { lesson: "Как добавлять аргументы для миксинов", time: "05:06" },
        { lesson: "Что такое шаблоны SASS", time: "09:42" },
        { lesson: "Как работают SASS функции", time: "10:20" },
        { lesson: "Организация файлов SASS большого проекта", time: "12:43" },
        { lesson: "3 способа позиционирования элементов", time: "04:52" },
        { lesson: "Как работает float", time: "11:48" },
        { lesson: "Создаем собственную систему grid", time: "26:34" },
        { lesson: "Применение градиента к тексту. Background-clip", time: "22:14" },
        { lesson: "Как создавать символы с помощью HTML", time: "18:00" },
        { lesson: "Анимируем и доделываем вторую секцию", time: "17:38" },
        { lesson: "Как создавать собственные иконочные шрифты", time: "21:21" },
        {
          lesson: "Используем свойство perspective для отражения перспективы элемента",
          time: "15:27",
        },
        { lesson: "Как работает blending mode в CSS", time: "22:28" },
        { lesson: "Доделываем секцию с карточками", time: "11:47" },
        { lesson: "Как закруглить текст с помощью свойства shape-outside", time: "15:51" },
        { lesson: "Как работают CSS фильтры", time: "08:17" },
        { lesson: "Как добавить видео на страницу", time: "14:05" },
        { lesson: "Знакомимся с тегом form и его содержимым", time: "18:33" },
        { lesson: "Анимируем форму", time: "13:24" },
        { lesson: "Делаем собственные radio button с помощью CSS", time: "19:22" },
        { lesson: "Создаем footer сайта", time: "09:54" },
        { lesson: "Создаем навигационное меню на чистом CSS ч.-1", time: "19:16" },
        { lesson: "Настраиваем переходы скорости анимаций, с помощью cubic-bezier", time: "07:04" },
        { lesson: "Анимируем гамбургер", time: "09:53" },
      ],
    },
    {
      id: uuidv4(),
      title: "Adaptive design",
      info: "11 лекций • 2ч 1м",
      lessons: [
        { lesson: "О чем этот блок", time: "00:59" },
        { lesson: "Как создают адаптивные сайты", time: "09:05" },
        { lesson: "Создаем миксин с медиа правилами", time: "13:44" },
        { lesson: "Адаптация проекта ч.1", time: "15:40" },
        { lesson: "Адаптация проекта ч.2", time: "18:56" },
        { lesson: "Адаптация проекта ч.3", time: "12:39" },
        { lesson: "Что такое адаптивные изображения", time: "04:29" },
        { lesson: "Как адаптировать изображения в HTML", time: "17:27" },
        { lesson: "Адаптируем HTML изображения в нашем проекте", time: "11:54" },
        { lesson: "Адаптация CSS изображений", time: "08:58" },
        { lesson: "Несколько финальных правок сайта", time: "06:57" },
      ],
    },
    {
      id: uuidv4(),
      title: "Node package manager",
      info: "6 лекций • 57м",
      lessons: [
        { lesson: "О чем этот блок", time: "01:19" },
        { lesson: "Что такое node.js и npm", time: "07:45" },
        { lesson: "Готовим к использованию первый npm пакет", time: "09:41" },
        { lesson: "Запускаем первый npm пакет", time: "08:26" },
        { lesson: "Используем gulp в нашем проекте", time: "25:40" },
        { lesson: "Как открыть сайт на мобильном телефоне", time: "03:47" },
      ],
    },
    {
      id: uuidv4(),
      title: "Введение в CSS GRID",
      info: "16 лекций • 1ч 40м",
      lessons: [
        { lesson: "О чем этот блок", time: "01:45" },
        { lesson: "Подготовка", time: "04:25" },
        { lesson: "Как создать шаблон сетки. Grid template", time: "08:42" },
        { lesson: "Как работают единицы измерения fr", time: "06:48" },
        { lesson: "Как переместить элемент в другую ячейку", time: "07:57" },
        { lesson: "Размещение нескольких элементов в одной ячейке", time: "08:45" },
        { lesson: "Практика: Создайте layout сайта", time: "00:59" },
        { lesson: "Пример преподавателя. Создаем layout", time: "07:43" },
        { lesson: "Как переименовать каждую линию в сетке grid", time: "08:07" },
        { lesson: "Как создать шаблон сетки с помощью схемы имен", time: "08:03" },
        { lesson: "Что такое явные и не явные гриды", time: "07:23" },
        { lesson: "Как выравнивать элементы внутри ячеек", time: "04:46" },
        { lesson: "Как выравнивать сетку внутри контейнера", time: "05:33" },
        { lesson: "Min-Max content", time: "10:40" },
        { lesson: "Auto-fill и Auto-fit. Размеры ячеек исходя из контента", time: "07:37" },
        { lesson: "Заключение. Grid garden", time: "01:05" },
      ],
    },
    {
      id: uuidv4(),
      title: "GRID CSS Project",
      info: "15 лекций • 2ч 49м",
      lessons: [
        { lesson: "О чем этот блок", time: "01:03" },
        { lesson: "Подготовка", time: "06:22" },
        { lesson: "Создаем шаблон grid сетки ч.1", time: "10:14" },
        { lesson: "Создаем шаблон grid сетки ч.2", time: "19:46" },
        { lesson: "Как работают SVG спрайты", time: "17:12" },
        { lesson: "Доделываем вторую секцию сайта", time: "11:04" },
        { lesson: "Создаем секцию 'Баннер' ч.1", time: "11:12" },
        { lesson: "Создаем секцию 'Баннер' ч.2", time: "07:22" },
        { lesson: "Создаем секцию с карточками", time: "20:10" },
        { lesson: "Создаем галерею", time: "11:29" },
        { lesson: "Создаем footer", time: "09:05" },
        { lesson: "Делаем 'Гамбургер'", time: "03:32" },
        { lesson: "Создаем header ч.1", time: "14:29" },
        { lesson: "Создаем header ч.2", time: "07:19" },
        { lesson: "Адаптируем сайт", time: "18:16" },
      ],
    },
    {
      id: uuidv4(),
      title: "До новых встреч!",
      info: "1 лекция • 3м",
      lessons: [{ lesson: "До свидания!", time: "02:43" }],
    },
  ],
};

export default htmlProProgram;
