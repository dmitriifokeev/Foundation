import { v4 as uuidv4 } from "uuid";
import jsEssentialFront from "../../../assets/img/bgCourseCards/jsEssentialFront.jpg";

const jsEssentialProgram = {
  programHeader: {
    title: "JavaScript",
    tag: "C нуля",
    heroSubtitle:
      "В этом курсе вы найдете все о современном языке программирования JavaScript. Станьте Front-end разработчиком на JavaScript.",
    type: "Курс",
    bgImg: jsEssentialFront,
    difficulty: 1,
  },

  program: [
    {
      id: uuidv4(),
      title: "Подготовка",
      info: "3 лекции • 18м",
      lessons: [
        { lesson: "Как проходить курс. Скачиваем материалы", time: "05:58" },
        { lesson: "Устанавливаем необходимое ПО", time: "12:20" },
        { lesson: "Оставайтесь со мной на связи", time: "00:11" },
      ],
    },
    {
      id: uuidv4(),
      title: "Основы JavaScript",
      info: "19 лекций • 2ч 36м",
      lessons: [
        { lesson: "Добро пожаловать в клуб! Hello world!", time: "09:30" },
        { lesson: "Как работает JavaScript", time: "07:05" },
        { lesson: "Важны ли точки с запятой? Как создавать комментарии", time: "05:45" },
        { lesson: "Что такое переменные", time: "09:14" },
        { lesson: "Подробнее о переменных", time: "11:37" },
        { lesson: "ПРОВЕРЬ СЕБЯ: Знание переменных", time: "3 questions" },
        { lesson: "Что такое 'выражения' и 'инструкции'", time: "05:34" },
        { lesson: "Типы данных", time: "07:09" },
        { lesson: "Особенности чисел и строк", time: "04:21" },
        { lesson: "ПРОВЕРЬ СЕБЯ: Типы данных", time: "2 questions" },
        {
          lesson: "Введение в операторы. Математические операторы '+', '-', '*', '/'",
          time: "11:53",
        },
        { lesson: "Как работают операторы сравнения '>', '==', '<', '!='", time: "09:48" },
        { lesson: "ПРОВЕРЬ СЕБЯ: Операторы сравнения", time: "6 questions" },
        { lesson: "Приоритетность операторов", time: "06:10" },
        { lesson: "Преобразование типов данных", time: "09:03" },
        { lesson: "Стандартные объекты. Подводим итоги и повторяем.", time: "08:21" },
        { lesson: "ПРАКТИКА-1. Создайте калькулятор индекса тела", time: "08:13" },
        { lesson: "ПРАКТИКА-2. Создайте любовный рандомайзер", time: "09:58" },
        { lesson: "Знакомство с If Else. Условное ветвление", time: "07:02" },
        { lesson: "Как работают логические операторы '!', '??', '&&', '||'", time: "12:41" },
        { lesson: "ПРОВЕРЬ СЕБЯ: Логические операторы", time: "4 questions" },
        { lesson: "Как работает тернарный оператор '?'", time: "07:49" },
        { lesson: "Заключительное слово этого блока", time: "05:13" },
      ],
    },
    {
      id: uuidv4(),
      title: "Мини-курс по ChatGPT для обучения и работы (Опционально)",
      info: "12 лекций • 1ч 11м",
      lessons: [
        { lesson: "Обзор нейросетей", time: "11:24" },
        { lesson: "Лучшие модели искусственного интеллекта на сегодня", time: "04:56" },
        { lesson: "Как оплатить подписку на Chat GPT", time: "04:38" },
        { lesson: "Обзор тарифов Chat GPT", time: "05:48" },
        { lesson: "Программа Chat GPT на разные операционные системы", time: "02:56" },
        { lesson: "Используем Chat GPT для обучения", time: "07:09" },
        { lesson: "Используем Chat GPT для программирования", time: "09:52" },
        { lesson: "Где еще полезен Chat GPT", time: "03:03" },
        { lesson: "Как показывать экран чату GPT", time: "04:51" },
        { lesson: "Генерация изображений с помощью Chat GPT и не только", time: "06:03" },
        { lesson: "Advanced Voice mode в Chat GPT", time: "03:57" },
        { lesson: "Как работает Copilot от GitHub", time: "06:30" },
      ],
    },
    {
      id: uuidv4(),
      title: "Углубление в основы JavaScript. Функции и Объекты",
      info: "21 лекция • 3ч 39м",
      lessons: [
        { lesson: "Используйте 'Use Strict'", time: "04:36" },
        { lesson: "Введение в функции", time: "11:31" },
        { lesson: "Function Expression и Function Declaration", time: "07:06" },
        { lesson: "Области видимости в JS", time: "11:54" },
        { lesson: "ПРОВЕРЬ СЕБЯ: Области видимости", time: "1 question" },
        { lesson: "Значения по умолчанию для параметров функций", time: "05:00" },
        { lesson: "Что такое callBack функции", time: "10:16" },
        { lesson: "Как работают стрелочные функции", time: "10:45" },
        { lesson: "ПРАКТИКА-3. Калькулятор победителя", time: "13:39" },
        { lesson: "Что такое объекты", time: "19:02" },
        { lesson: "Вложенные свойства объектов", time: "04:47" },
        { lesson: "Сокращенная запись свойств", time: "04:17" },
        { lesson: "Создание функций в объектах и немного про this", time: "11:05" },
        { lesson: "ПРАКТИКА-4. Создайте калькулятор BMI с помощью объектов", time: "11:38" },
        { lesson: "Введение в массивы", time: "16:57" },
        { lesson: "'Методы' массивов", time: "18:58" },
        { lesson: "Введение в циклы for", time: "09:50" },
        { lesson: "Break & Continue в циклах For", time: "09:52" },
        { lesson: "Цикл While Do While", time: "09:18" },
        { lesson: "Копирование объектов.", time: "12:15" },
        { lesson: "ПРАКТИКА-5. Создайте последовательность Фибоначчи", time: "12:02" },
        { lesson: "ПРОВЕРЬ СЕБЯ: Тест по основам JS", time: "10 questions" },
        { lesson: "Заключительное слово этого блока", time: "03:55" },
      ],
    },
    {
      id: uuidv4(),
      title: "Основы работы с DOM",
      info: "18 лекций • 2ч 56м",
      lessons: [
        { lesson: "Prettier и как работают 'сниппеты'", time: "09:11" },
        { lesson: "Что такое DOM и Окружение JS", time: "07:10" },
        { lesson: "Получение HTML Элементов", time: "10:18" },
        { lesson: "Что такое HTML узлы и родство элементов", time: "12:32" },
        { lesson: "Что такое псевдомассив", time: "04:34" },
        { lesson: "Как работают циклы for of и for in", time: "12:46" },
        { lesson: "Получение и изменение содержимого тегов", time: "09:46" },
        { lesson: "Создание и вставка новых элементов DOM", time: "04:29" },
        { lesson: "Как работает InsertAdjustmentHTML", time: "06:29" },
        { lesson: "Клонирование, перемещение и удаление элементов", time: "04:30" },
        { lesson: "Изменение CSS стилей с помощью JS", time: "12:22" },
        { lesson: "Получение и изменение атрибутов DOM элементов", time: "04:10" },
        { lesson: "Что такое обработчик события на странице", time: "07:44" },
        { lesson: "Как добавлять воспроизведение аудио при срабатывании события", time: "06:04" },
        { lesson: "ПРАКТИКА-6. Создайте игру 'угадай число'", time: "26:29" },
        { lesson: "ПРАКТИКА-7. Создайте модальные окна", time: "14:51" },
        { lesson: "ПРАКТИКА-8. Создайте игру в алфавит", time: "19:44" },
        { lesson: "ПРОВЕРЬ СЕБЯ: Тест по D.O.M.", time: "7 questions" },
        { lesson: "Заключительное слово", time: "02:31" },
      ],
    },
    {
      id: uuidv4(),
      title: "Углубленная работа с данными",
      info: "13 лекций • 2ч 36м",
      lessons: [
        { lesson: "О чем этот блок", time: "01:58" },
        { lesson: "Как работает контекст вызова this", time: "16:35" },
        { lesson: "Деструктуризация массивов", time: "14:06" },
        { lesson: "Деструктуризация объектов", time: "12:16" },
        { lesson: "Как работает оператор spread", time: "11:38" },
        { lesson: "Что такое оператор rest", time: "10:21" },
        { lesson: "ПРАКТИКА-9. Деструктуризация, rest и spread", time: "10:10" },
        { lesson: "Что такое классы в JS", time: "34:08" },
        { lesson: "Что такое Set", time: "12:37" },
        { lesson: "Что такое Map", time: "07:47" },
        { lesson: "Конвертация структур данных", time: "10:18" },
        { lesson: "ПРАКТИКА-10. Map и Set", time: "11:35" },
        { lesson: "Заключительное слово", time: "02:28" },
      ],
    },
    {
      id: uuidv4(),
      title: "Работа со строками",
      info: "4 лекции • 44м",
      lessons: [
        { lesson: "Как работают строки. Методы slice", time: "10:27" },
        { lesson: "Методы строк ч. 2. (trim, toLowerCase, replace)", time: "08:28" },
        { lesson: "Методы строк ч. 3 (Split / Join)", time: "12:40" },
        { lesson: "ПРАКТИКА-11. Работа со строками", time: "12:35" },
      ],
    },
    {
      id: uuidv4(),
      title: "Работа функций",
      info: "6 лекций • 46м",
      lessons: [
        { lesson: "Параметры функций по умолчанию", time: "07:05" },
        { lesson: "Объекты как параметры функций", time: "07:27" },
        { lesson: "Функции высшего порядка и первого класса", time: "10:10" },
        { lesson: "Возврат функции из функции", time: "04:08" },
        { lesson: "Метод функций call", time: "09:07" },
        { lesson: "Метод функций bind", time: "07:38" },
      ],
    },
    {
      id: uuidv4(),
      title: "Работа с массивами",
      info: "21 лекция • 3ч 1м",
      lessons: [
        { lesson: "О чем этот блок", time: "01:55" },
        { lesson: "Базовые методы массивов", time: "05:53" },
        { lesson: "Как работает forEach", time: "08:09" },
        { lesson: "forEach на Map и Set", time: "03:07" },
        { lesson: "Начинаем создавать приложение", time: "11:30" },
        { lesson: "Метод Map()", time: "08:51" },
        { lesson: "Map() на практике", time: "11:19" },
        { lesson: "Метод filter()", time: "05:30" },
        { lesson: "Метод Reduce()", time: "09:52" },
        { lesson: "ПРАКТИКА-12. Filter/ map/ reduce", time: "08:27" },
        { lesson: "Применяем методы на странице", time: "09:37" },
        { lesson: "Метод find()", time: "04:51" },
        { lesson: "LogIn в аккаунт", time: "15:45" },
        { lesson: "Перевод средств из аккаунта", time: "11:41" },
        { lesson: "Метод findIndex()", time: "10:44" },
        { lesson: "Методы some() и every()", time: "06:41" },
        { lesson: "Метод flat()", time: "07:42" },
        { lesson: "Метод sort()", time: "12:54" },
        { lesson: "Метод fill() и Array.from()", time: "09:37" },
        { lesson: "ПРАКТИКА-13. Методы массивов", time: "14:42" },
        { lesson: "Заключение блока", time: "02:31" },
      ],
    },
    {
      id: uuidv4(),
      title: "Числа и даты",
      info: "9 лекций • 1ч 39м",
      lessons: [
        { lesson: "Базовые методы чисел", time: "09:43" },
        { lesson: "Что такое BigInt", time: "05:58" },
        { lesson: "Как создать дату", time: "12:03" },

        { lesson: "Устанавливаем даты в банковском приложении", time: "15:51" },
        { lesson: "Выражения с датами", time: "14:30" },
        { lesson: "Форматы дат разных стран", time: "09:35" },
        { lesson: "Форматы чисел разных стран", time: "06:36" },
        { lesson: "SetInterval и SetTimer", time: "19:31" },
        { lesson: "Заключительное слово", time: "04:56" },
      ],
    },
    {
      id: uuidv4(),
      title: "Углубление в работу с DOM",
      info: "14 лекций • 2ч 36м",
      lessons: [
        { lesson: "О чем этот блок", time: "01:32" },
        { lesson: "Живые VS статичные коллекции", time: "08:22" },
        { lesson: "Координаты элементов", time: "11:27" },
        { lesson: "Отмена и всплытие событий", time: "15:47" },
        { lesson: "Делегирование событий", time: "10:32" },
        { lesson: "Создаем табы", time: "12:56" },
        { lesson: "Создаем прозрачное меню", time: "11:42" },
        { lesson: "Intersection API", time: "21:41" },
        { lesson: "Применяем Intersection на секциях", time: "09:36" },
        { lesson: "Применяем Intersection на изображениях", time: "11:53" },
        { lesson: "Создаем слайдер", time: "15:00" },
        { lesson: "Доделываем слайдер", time: "12:08" },
        { lesson: "3 способа подключения скрипта на сайт", time: "12:23" },
        { lesson: "Заключение", time: "01:07" },
      ],
    },
    {
      id: uuidv4(),
      title: "Объектно ориентированное программирование",
      info: "21 лекция • 2ч 54м",
      lessons: [
        { lesson: "Скачайте заново материалы к курсу", time: "00:06" },
        { lesson: "Что такое функции конструкторы", time: "19:35" },
        { lesson: "Разница между prototype и __proto__", time: "09:27" },
        { lesson: "ПРАКТИКА-14. Создайте функции конструкторы", time: "07:48" },
        { lesson: "Разница между классами и функциями конструкторами", time: "06:53" },
        { lesson: "Что такое геттеры", time: "09:05" },
        { lesson: "Что такое сеттеры", time: "13:48" },
        { lesson: "ПРАКТИКА-15. Классы, геттеры и сеттеры", time: "09:03" },
        { lesson: "Что такое статические методы", time: "05:52" },
        { lesson: "Object.create()", time: "06:35" },
        { lesson: "Создание дочерних классов", time: "14:38" },
        { lesson: "ПРАКТИКА-16. Создайте дочерний класс", time: "08:37" },
        { lesson: "Создание дочерних классов через синтаксис классов", time: "09:50" },
        { lesson: "Что такое API", time: "07:22" },
        { lesson: "Переменные в классах", time: "06:45" },
        { lesson: "Инкапсуляция свойств", time: "10:14" },
        { lesson: "Инкапсуляция свойств новый стандарт", time: "07:15" },
        { lesson: "Создание цепочки методов", time: "02:33" },
        { lesson: "Подводим итог изученного", time: "06:26" },
        { lesson: "ПРАКТИКА-17. Дочерние классы через синтаксис классов", time: "07:21" },
        { lesson: "ПРОВЕРЬ СЕБЯ: Тест по теме", time: "5 questions" },
        { lesson: "Заключительное слово", time: "04:29" },
      ],
    },
    {
      id: uuidv4(),
      title: "Объектно ориентированное программирование - на практике",
      info: "12 лекций • 2ч 18м",
      lessons: [
        { lesson: "О чем этот проект", time: "02:47" },
        { lesson: "Используем Geolocation API", time: "07:48" },
        { lesson: "Размещаем карту на сайте", time: "09:52" },
        { lesson: "Работаем с документацией", time: "15:49" },
        { lesson: "Отображение формы", time: "12:06" },
        { lesson: "Рефакторинг в синтаксис классов", time: "21:02" },
        { lesson: "Создаем классы тренировок", time: "08:12" },
        { lesson: "Валидация форм", time: "20:41" },
        { lesson: "Отображение тренировок", time: "16:55" },
        { lesson: "Плавное перемещение к тренировкам на карте", time: "07:17" },
        { lesson: "Работа с localStorage", time: "12:49" },
        { lesson: "Заключительное слово", time: "02:24" },
      ],
    },
    {
      id: uuidv4(),
      title: "Асинхронный код",
      info: "17 лекций • 3ч 31м",
      lessons: [
        { lesson: "Что такое асинхронный код", time: "06:47" },
        { lesson: "Как работает XMLHttpRequest", time: "16:33" },
        { lesson: "Подключаемся к API", time: "21:54" },
        { lesson: "Call-back hell", time: "11:21" },
        { lesson: "Введение в fetch & promise", time: "14:17" },
        { lesson: "Как работает promise по цепочке", time: "05:52" },
        { lesson: "Обработка ошибок в promise", time: "10:44" },
        { lesson: "Обработка ошибок сервера", time: "21:26" },
        { lesson: "ПРАКТИКА-18. Используем внешние API", time: "22:48" },
        { lesson: "Что такое промисификация", time: "14:37" },
        { lesson: "Очередь выполнения кода", time: "13:22" },
        { lesson: "Промисификация ч.2", time: "08:40" },
        { lesson: "Как работает async/await", time: "09:11" },
        { lesson: "Обработка ошибок try catch", time: "06:41" },
        { lesson: "Возврат данных из async/await", time: "06:54" },
        { lesson: "Параллельное выполнение promises", time: "08:56" },
        { lesson: "Доп. методы параллельного кода", time: "11:00" },
      ],
    },
    {
      id: uuidv4(),
      title: "До встречи на уроках!",
      info: "1 лекция • 4м",
      lessons: [{ lesson: "Прощание", time: "03:54" }],
    },
  ],
};

export default jsEssentialProgram;
